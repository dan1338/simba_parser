#include <gtest/gtest.h>

#include "proto/packet_parser.h"
#include "proto/ipv4.h"

using namespace proto;

static constexpr unsigned char packet_dump[] = {
    0x45, 0x0, 0x0, 0x5c, 0xf2, 0x1b, 0x40, 0x0, 0x20, 0x11, 0xa, 0x9c, 0x5b, 0xcb, 0xfd, 0xf4, 0xef, 0xc3, 0x14, 0x56,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

static constexpr auto version = 4;
static constexpr auto ihl = 5;
static constexpr auto identification = 0xf21b;
static constexpr auto total_length = 92;
static constexpr auto ttl = 32;
static constexpr auto dst_address = IPv4::Address{239, 195, 20, 86};
static constexpr auto src_address = IPv4::Address{91, 203, 253, 244};
static constexpr auto protocol = IPv4::IP_UDP;

TEST(TestIPv4, ParsePacket)
{
    const auto ip_packet{PacketParser(RawPacket{packet_dump}).parse<IPv4>()};

    EXPECT_TRUE(ip_packet.has_value());

    EXPECT_EQ(ip_packet->header.version, version);
    EXPECT_EQ(ip_packet->header.ihl, ihl);
    EXPECT_EQ(ip_packet->header.total_length, total_length);
    EXPECT_EQ(ip_packet->header.identification, identification);
    EXPECT_EQ(ip_packet->header.ttl, ttl);
    EXPECT_EQ(ip_packet->header.protocol, protocol);
    EXPECT_EQ(ip_packet->header.src_address, src_address);
    EXPECT_EQ(ip_packet->header.dst_address, dst_address);

    EXPECT_TRUE(ip_packet->data.size() == 72);
}
